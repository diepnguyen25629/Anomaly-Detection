[1/12] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D F:\esp\Espressif\frameworks\fall_detection\build\bootloader\esp-idf\esptool_py && F:\esp\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe F:/esp/Espressif/frameworks/esp-idf-v5.2.5/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 F:/esp/Espressif/frameworks/fall_detection/build/bootloader/bootloader.bin"
Bootloader binary size 0x68b0 bytes. 0x750 bytes (7%) free.
[2/12] No install step for 'bootloader'
[3/12] Completed 'bootloader'
[4/12] Building C object esp-idf/components/CMakeFiles/__idf_components.dir/ds18b20_1_wire.c.obj
F:/esp/Espressif/frameworks/fall_detection/components/ds18b20_1_wire.c:11:20: warning: 'TAG' defined but not used [-Wunused-variable]
   11 | static const char *TAG = "DS18B20_1_WIRE";
      |                    ^~~
[5/12] Building C object esp-idf/components/CMakeFiles/__idf_components.dir/sd_card_spi.c.obj
[6/12] Linking C static library esp-idf\components\libcomponents.a
[7/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main1.c.obj
[8/12] Linking C static library esp-idf\main\libmain.a
[9/12] Generating ld/sections.ld
[10/12] Linking CXX executable main.elf
[11/12] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated F:/esp/Espressif/frameworks/fall_detection/build/main.bin
[12/12] C:\WINDOWS\system32\cmd.exe /C "cd /D F:\esp\Espressif\frameworks\fall_detection\build\esp-idf\esptool_py && F:\esp\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe F:/esp/Espressif/frameworks/esp-idf-v5.2.5/components/partition_table/check_sizes.py --offset 0x8000 partition --type app F:/esp/Espressif/frameworks/fall_detection/build/partition_table/partition-table.bin F:/esp/Espressif/frameworks/fall_detection/build/main.bin"
main.bin binary size 0x1183b0 bytes. Smallest app partition is 0x180000 bytes. 0x67c50 bytes (27%) free.
